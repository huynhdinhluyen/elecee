spring.config.import=optional:file:.env[.properties]
spring.application.name=electrical-preorder-system-backend

# Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=${DATABASE_DRIVER_CLASS_NAME}
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO}
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL}
spring.jpa.database-platform=${DATABASE_DIALECT}

# Default account
default.admin.username=${DEFAULT_ADMIN_USERNAME}
default.admin.password=${DEFAULT_ADMIN_PASSWORD}
default.admin.fullname=${DEFAULT_ADMIN_FULLNAME}


# Server Configuration
server.port=${SERVER_PORT}

#compression
server.compression.enabled=${SERVER_COMPRESSION_ENABLED}
server.compression.mime-types=${SERVER_COMPRESSION_MIME_TYPES}
server.compression.min-response-size=${SERVER_COMPRESSION_MIN_RESPONSE_SIZE}

#JWT
JWT_SECRET=${JWT_SECRET}
JWT_EXPIRATION=${JWT_EXPIRATION}

#API
api.prefix=${API_PREFIX}

#Caching
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}
spring.cache.type=${SPRING_CACHE_TYPE}

#cloudinary
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

#Swagger
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED}
springdoc.swagger-ui.path=${SWAGGER_UI_PATH}

#OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USER_INFO_URI}

#Email
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_PROPERTIES_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}
spring.mail.properties.mail.transport.protocol=${MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL}

#File Upload
spring.servlet.multipart.file-size-threshold=${MULTIPART_FILE_SIZE}
spring.servlet.multipart.max-file-size=${MULTIPART_MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${MULTIPART_MAX_REQUEST_SIZE}

#Client
client.domain=${DEV_CLIENT_DOMAIN}

#Firebase
firebase.googleCredentials=${FIREBASE_GOOGLE_CREDENTIALS}

#RabbitMQ
spring.rabbitmq.addresses=${RABBITMQ_ADDRESSES}

# Kafka configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET}
spring.kafka.producer.key-serializer=${KAFKA_KEY_SERIALIZER}
spring.kafka.producer.value-serializer=${KAFKA_VALUE_SERIALIZER}
spring.kafka.consumer.key-deserializer=${KAFKA_KEY_DESERIALIZER}

#PayOs
payos.clientId=${PAYOS_CLIENT_ID}
payos.apiKey=${PAYOS_API_KEY}
payos.checksumKey=${PAYOS_CHECKSUM_KEY}
payos.payment.return-url=${PAYOS_PAYMENT_RETURN_URL}
payos.payment.cancel-url=${PAYOS_PAYMENT_CANCEL_URL}
#10 minutes
payos.payment.expire-time=${PAYOS_PAYMENT_EXPIRE_TIME}
